# Generated by Django 5.2 on 2025-05-27 22:22

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otp_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, help_text='Primary account identifier', max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('first_name', models.CharField(blank=True, help_text="User's first name", max_length=30)),
                ('last_name', models.CharField(blank=True, help_text="User's last name", max_length=30)),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active')),
                ('is_verified', models.BooleanField(default=False, help_text='Designates whether this user has verified their email')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site')),
                ('google_auth', models.BooleanField(default=False, help_text='Designates whether this user authenticated via Google')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when user was created')),
                ('otp', models.CharField(blank=True, help_text='One-time password for verification', max_length=6, null=True)),
                ('otp_expires_at', models.DateTimeField(blank=True, help_text='Expiration time for OTP', null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to', related_name='focusreader_users', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user', related_name='focusreader_users', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['email'], name='api_user_email_a7eefd_idx'), models.Index(fields=['is_verified'], name='api_user_is_veri_4dbd55_idx'), models.Index(fields=['created_at'], name='api_user_created_f8e07b_idx')],
            },
        ),
    ]
